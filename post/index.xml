<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on DH2323 Blog</title>
    <link>http://jeppes.github.io/DH2323-project/post/</link>
    <description>Recent content in Posts on DH2323 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jun 2016 14:26:23 +0200</lastBuildDate>
    <atom:link href="http://jeppes.github.io/DH2323-project/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Radial Reaction</title>
      <link>http://jeppes.github.io/DH2323-project/post/radial_reaction/</link>
      <pubDate>Wed, 01 Jun 2016 14:26:23 +0200</pubDate>
      
      <guid>http://jeppes.github.io/DH2323-project/post/radial_reaction/</guid>
      <description>&lt;video width=&#34;auto&#34; height=&#34;298&#34; autoplay loop&gt;
  &lt;source src=&#34;videos/radial_reaction.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;


</description>
    </item>
    
    <item>
      <title>Arbitrary Morph Animations</title>
      <link>http://jeppes.github.io/DH2323-project/post/morph-updated/</link>
      <pubDate>Mon, 30 May 2016 15:45:55 +0200</pubDate>
      
      <guid>http://jeppes.github.io/DH2323-project/post/morph-updated/</guid>
      <description>

&lt;h2 id=&#34;reversing-the-animation:841e12661b38e943506a29031bf30048&#34;&gt;Reversing the animation&lt;/h2&gt;

&lt;p&gt;The morph animation can now be reversed as shown in the following clip&lt;/p&gt;

&lt;video width=&#34;auto&#34; height=&#34;298&#34; autoplay loop&gt;
  &lt;source src=&#34;http://jeppes.github.io/DH2323-project/videos/morph-to-bottom.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;



&lt;p&gt;Note the arc of the path. This effect is achieved by translating the view along a quadradic bezier path which is calculated based on the positions of the two views relative to one-another. The icon in the floating action button is also faded, which results in a smoother transition between the two views.&lt;/p&gt;

&lt;h2 id=&#34;arbitary-positions:841e12661b38e943506a29031bf30048&#34;&gt;Arbitary Positions&lt;/h2&gt;

&lt;p&gt;The animation works for arbitrary positions:&lt;/p&gt;

&lt;p&gt;&lt;video width=&#34;auto&#34; height=&#34;298&#34; autoplay loop&gt;
  &lt;source src=&#34;http://jeppes.github.io/DH2323-project/videos/morph-to-middle.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Morph Animation (Rough)</title>
      <link>http://jeppes.github.io/DH2323-project/post/test-test/</link>
      <pubDate>Wed, 25 May 2016 16:16:09 +0200</pubDate>
      
      <guid>http://jeppes.github.io/DH2323-project/post/test-test/</guid>
      <description>&lt;p&gt;The first version of our morph animation!&lt;/p&gt;

&lt;video width=&#34;auto&#34; height=&#34;298&#34; autoplay loop&gt;
  &lt;source src=&#34;http://jeppes.github.io/DH2323-project/videos/morph1.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;



&lt;p&gt;The animation is currently not reversible, and it relies on the static positions of each views. Our goal is to free it from these constraints and thereby make it re-useable.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Project Specification</title>
      <link>http://jeppes.github.io/DH2323-project/post/project-specification/</link>
      <pubDate>Tue, 24 May 2016 11:47:59 +0200</pubDate>
      
      <guid>http://jeppes.github.io/DH2323-project/post/project-specification/</guid>
      <description>

&lt;h1 id=&#34;background:76392fa21d1c6db2bd12d64d37f25450&#34;&gt;Background&lt;/h1&gt;

&lt;p&gt;Animations are key when creating engaging user interfaces. The aim of this project will be to implement advanced GUI-component animations in the Android operating system to add visual interest to user interfaces and spur user-engagement.&lt;/p&gt;

&lt;p&gt;The inspiration for this project comes from Google’s Material Design. A core concept in this design language is motion. The official guidelines states that “Real-world forces, like gravity, [should] inspire an element’s movement [&amp;hellip;].” It also highlights the importance of “Hierarchical and spatial relationships between elements”. Many of these motion elements have not yet made their way into the Android eco-system (at least not in terms of first-party implementations).&lt;/p&gt;

&lt;h1 id=&#34;goals:76392fa21d1c6db2bd12d64d37f25450&#34;&gt;Goals&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Integrating natural forces like gravity into animations to allow for more natural transformations of elements in a layout. The implications of this are explored further in the “Animation philosophy” section.
Implementing a morphing/merging animation between views. One view should be able to transition into another when acted on by the user. Some example from the material design specification of what this can look like can be found here:&lt;/li&gt;
&lt;li&gt;Making these animations convincing will require carefully considering the interpolations functions used, the motion path between the views and creating a convincing illusion of a morphing between these views.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;center&gt; &lt;video width=&#34;auto&#34; height=&#34;298&#34; autoplay loop&gt;
  &lt;source src=&#34;http://material-design.storage.googleapis.com/publish/material_v_8/material_ext_publish/0B8v7jImPsDi-Mk9EVk5DRVN1cmc/components-buttons-fab-transition_card_01.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;


&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;video width=&#34;auto&#34; height=&#34;298&#34; autoplay loop&gt;
  &lt;source src=&#34;http://material-design.storage.googleapis.com/publish/material_v_8/material_ext_publish/0B8v7jImPsDi-bWxnMGxHUFdKbkU/components-buttons-fab-transition_morph_01.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

 &lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;animation-philosophy:76392fa21d1c6db2bd12d64d37f25450&#34;&gt;Animation Philosophy&lt;/h1&gt;

&lt;p&gt;Animations should accelerate and decelerate naturally, and follow a natural easing-curve determined by physical concepts such as gravity and attraction between objects. Animations should be deliberate and follow a set hierarchy. They should be able to affect the surrounding environment in a radial spreading motion, similar to how water behaves when touched. Here are some examples to demonstrate some of these principles:&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;video width=&#34;auto&#34; height=&#34;298&#34; autoplay loop&gt;
  &lt;source src=&#34;//material-design.storage.googleapis.com/publish/material_v_8/material_ext_publish/0B14F_FSUCc01eGdZQnRQYlRXek0/01_GridRipple.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

 &lt;/center&gt;
&lt;center&gt; &lt;video width=&#34;auto&#34; height=&#34;298&#34; autoplay loop&gt;
  &lt;source src=&#34;http://material-design.storage.googleapis.com/publish/material_v_8/material_ext_publish/0B14F_FSUCc01NVRScVpxWTVXeVU/02_SearchRipple-v2.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

 &lt;video width=&#34;auto&#34; height=&#34;298&#34; autoplay loop&gt;
  &lt;source src=&#34;http://material-design.storage.googleapis.com/publish/material_v_8/material_ext_publish/0B14F_FSUCc01SktIam0yei0wSnM/Natural_02_Arc-v3.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

 &lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;implementation-details:76392fa21d1c6db2bd12d64d37f25450&#34;&gt;Implementation Details&lt;/h1&gt;

&lt;p&gt;This project will include exploring the use of interpolation and paths in motion based transformations, and allowing gravity to inspire this motion. Since we are building this for the Android platform, the implementation language will be Java. If time permits it we would like to put these features into a library so other developers can implement these features into their own apps. This is, however, outside the initial scope of this investigation.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>